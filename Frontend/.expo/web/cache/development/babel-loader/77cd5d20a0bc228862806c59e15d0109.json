{"ast":null,"code":"var _jsxFileName = \"/Users/hobingxuan/git clones/cs4242/Frontend/Posts.js\";\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Container } from \"react-native-web/dist/index\";\nimport ListView from \"react-native-web/dist/exports/ListView\";\nvar x = {\n  fontSize: 10,\n  color: 'rgb(256, 256, 256)',\n  lineHeight: 24,\n  textAlign: 'center',\n  'font-family': 'verdana',\n  flexWrap: 'wrap',\n  flex: 1,\n  width: 500,\n  'word-wrap': \"break-word\",\n  \"overflow-wrap\": \"break-word\"\n};\n\nvar Posts = function Posts(_ref) {\n  var posts = _ref.posts;\n  console.log(posts);\n  var ds = new ListView.DataSource({\n    rowHasChanged: function rowHasChanged(r1, r2) {\n      return r1 !== r2;\n    }\n  });\n  var x = ds.cloneWithRows(posts);\n  return React.createElement(ListView, {\n    style: {\n      marginHorizontal: 50,\n      borderLeftWidth: 1,\n      borderLeftColor: '#000',\n      borderTopWidth: 1,\n      borderTopColor: '#000',\n      borderRightWidth: 1,\n      borderRightColor: '#000'\n    },\n    dataSource: x,\n    renderRow: function renderRow(rowData) {\n      return React.createElement(\"h1\", {\n        style: {\n          fontSize: 20,\n          'font-family': 'verdana'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, rowData);\n    },\n    renderSeparator: function renderSeparator(sectionId, rowId) {\n      return React.createElement(View, {\n        key: rowId,\n        style: styles.separator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  scrollContainer: {\n    flex: 1\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  separator: {\n    height: 0.5,\n    width: \"100%\",\n    backgroundColor: \"#000\"\n  },\n  box: {\n    margin: 2,\n    width: Dimensions.get('window').width / 2 - 6,\n    height: 150,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#003f5c',\n    flexShrink: 1\n  }\n});\nexport default Posts;","map":{"version":3,"sources":["/Users/hobingxuan/git clones/cs4242/Frontend/Posts.js"],"names":["React","Container","x","fontSize","color","lineHeight","textAlign","flexWrap","flex","width","Posts","posts","console","log","ds","ListView","DataSource","rowHasChanged","r1","r2","cloneWithRows","marginHorizontal","borderLeftWidth","borderLeftColor","borderTopWidth","borderTopColor","borderRightWidth","borderRightColor","rowData","sectionId","rowId","styles","separator","StyleSheet","create","scrollContainer","getStartedText","height","backgroundColor","box","margin","Dimensions","get","justifyContent","alignItems","flexShrink"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;SACsCC,S;;AAEtC,IAAMC,CAAC,GAAG;AACRC,EAAAA,QAAQ,EAAE,EADF;AAERC,EAAAA,KAAK,EAAE,oBAFC;AAGRC,EAAAA,UAAU,EAAE,EAHJ;AAIRC,EAAAA,SAAS,EAAE,QAJH;AAKR,iBAAe,SALP;AAMRC,EAAAA,QAAQ,EAAE,MANF;AAORC,EAAAA,IAAI,EAAE,CAPE;AAQRC,EAAAA,KAAK,EAAE,GARC;AASR,eAAa,YATL;AAUR,mBAAiB;AAVT,CAAV;;AAaA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAQ3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAMG,EAAE,GAAG,IAAIC,QAAQ,CAACC,UAAb,CAAwB;AAACC,IAAAA,aAAa,EAAE,uBAACC,EAAD,EAAKC,EAAL;AAAA,aAAYD,EAAE,KAAKC,EAAnB;AAAA;AAAhB,GAAxB,CAAX;AACA,MAAIjB,CAAC,GAAGY,EAAE,CAACM,aAAH,CAAiBT,KAAjB,CAAR;AACA,SACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAI;AACPU,MAAAA,gBAAgB,EAAE,EADX;AAEPC,MAAAA,eAAe,EAAE,CAFV;AAGPC,MAAAA,eAAe,EAAE,MAHV;AAIPC,MAAAA,cAAc,EAAE,CAJT;AAKPC,MAAAA,cAAc,EAAE,MALT;AAMPC,MAAAA,gBAAgB,EAAE,CANX;AAOPC,MAAAA,gBAAgB,EAAE;AAPX,KADX;AAUE,IAAA,UAAU,EAAEzB,CAVd;AAWE,IAAA,SAAS,EACL,mBAAC0B,OAAD;AAAA,aACI;AAAI,QAAA,KAAK,EAAE;AAACzB,UAAAA,QAAQ,EAAE,EAAX;AAAe,yBAAe;AAA9B,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsDyB,OAAtD,CADJ;AAAA,KAZN;AAcE,IAAA,eAAe,EAAE,yBAACC,SAAD,EAAYC,KAAZ;AAAA,aACC,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAX;AAAkB,QAAA,KAAK,EAAEC,MAAM,CAACC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAAA,KAdnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAmBD,CA9BD;;AAgCA,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,eAAe,EAAE;AACf3B,IAAAA,IAAI,EAAE;AADS,GADc;AAI/B4B,EAAAA,cAAc,EAAE;AACdjC,IAAAA,QAAQ,EAAE,EADI;AAEdC,IAAAA,KAAK,EAAE,qBAFO;AAGdC,IAAAA,UAAU,EAAE,EAHE;AAIdC,IAAAA,SAAS,EAAE;AAJG,GAJe;AAU/B0B,EAAAA,SAAS,EAAE;AACNK,IAAAA,MAAM,EAAE,GADF;AACO5B,IAAAA,KAAK,EAAE,MADd;AACsB6B,IAAAA,eAAe,EAAE;AADvC,GAVoB;AAa/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE,CADL;AAEH/B,IAAAA,KAAK,EAAEgC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBjC,KAAzB,GAAiC,CAAjC,GAAoC,CAFxC;AAGH4B,IAAAA,MAAM,EAAE,GAHL;AAIHM,IAAAA,cAAc,EAAE,QAJb;AAKHC,IAAAA,UAAU,EAAE,QALT;AAMHN,IAAAA,eAAe,EAAE,SANd;AAOHO,IAAAA,UAAU,EAAE;AAPT;AAb0B,CAAlB,CAAf;AAwBA,eAAenC,KAAf","sourcesContent":["import React from 'react'\nimport {Dimensions, StyleSheet, View, Container, ListView} from 'react-native'\n\nconst x = {\n  fontSize: 10,\n  color: 'rgb(256, 256, 256)',\n  lineHeight: 24,\n  textAlign: 'center',\n  'font-family': 'verdana',\n  flexWrap: 'wrap',\n  flex: 1,\n  width: 500,\n  'word-wrap': \"break-word\",\n  \"overflow-wrap\": \"break-word\"\n}\n\nconst Posts = ({ posts }) => {\n  /*return (\n    <View>\n      {posts.map((post) => (\n        <View style ={styles.box} onclick={()=>alert({post})}><h1 style={x}>{post}</h1></View>\n      ))}\n    </View>\n  )*/\n  console.log(posts)\n  const ds = new ListView.DataSource({rowHasChanged: (r1, r2) => r1 !== r2});\n  var x = ds.cloneWithRows(posts)\n  return (\n    <ListView\n      style = {{\n        marginHorizontal: 50,\n        borderLeftWidth :1,\n        borderLeftColor: '#000',\n        borderTopWidth :1,\n        borderTopColor: '#000',\n        borderRightWidth :1,\n        borderRightColor: '#000',\n      }}\n      dataSource={x}\n      renderRow={\n          (rowData) =>\n              <h1 style={{fontSize: 20, 'font-family': 'verdana'}}>{rowData}</h1>}\n      renderSeparator={(sectionId, rowId) =>\n                        <View key={rowId} style={styles.separator} />}\n    />\n  )\n};\n\nconst styles = StyleSheet.create({\n  scrollContainer: {\n    flex: 1,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  separator: {\n       height: 0.5, width: \"100%\", backgroundColor: \"#000\"\n   },\n  box: {\n    margin: 2,\n    width: Dimensions.get('window').width / 2 -6,\n    height: 150,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#003f5c',\n    flexShrink: 1,\n  }\n});\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}